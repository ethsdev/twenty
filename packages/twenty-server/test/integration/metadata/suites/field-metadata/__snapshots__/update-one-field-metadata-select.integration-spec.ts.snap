// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Field metadata select update tests group It should fail to create a field metada with an undefined option label 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option label is required",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metada with an undefined option value 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option value is required",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: empty string id  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option id is invalid",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: empty string label  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option label "" is beneath 1 character",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: empty string value  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option value "" is beneath 1 character",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: not a string id  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option id is invalid",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: not a string label  1`] = `
[
  {
    "extensions": {
      "code": "INTERNAL_SERVER_ERROR",
      "exceptionEventId": "mocked-exception-id",
    },
    "message": "label.includes is not a function",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: not a string value  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Value must be in UPPER_CASE and follow snake_case "22222"",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: null id  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option id is required",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: null label  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option label is required",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: null value  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option value is required",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: only white spaces id  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option id is invalid",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: only white spaces label  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option label "" is beneath 1 character",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: only white spaces value  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option value "" is beneath 1 character",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: too long id  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option id is invalid",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: too long label  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option label "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" exceeds 63 characters",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create a field metadata with an option having: too long value  1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option value "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" exceeds 63 characters",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create duplicated trimmed options values 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Duplicated option value "OPTION_1"",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create field metadata with an option label that contains a comma 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Label must not contain a comma",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create field metadata with an option value that do not follow UPPER_CASE and snake_case 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Value must be in UPPER_CASE and follow snake_case "Option 1 and some other things, /"",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create field metadata with empty options 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Options are required for enum fields",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create field metadata with null options 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Options are required for enum fields",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create field metadata with options having duplicated values 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Duplicated option value "OPTION_1"",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create field metadata with undefined options 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Options are required for enum fields",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create option with invalid id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Option id is invalid",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create two options with the same id 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Duplicated option id "fd1f11fd-3f05-4a33-bddf-800c3412ce98"",
  },
]
`;

exports[`Field metadata select update tests group It should fail to create two options with the same position 1`] = `
[
  {
    "extensions": {
      "code": "BAD_USER_INPUT",
    },
    "message": "Duplicated option position "1"",
  },
]
`;
